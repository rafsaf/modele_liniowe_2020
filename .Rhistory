table_last = read.table('CH03PR15.txt')
View(table_last)
linear = lm(V1~V2, table_last)
View(linear)
summary(linear)
v1 = table_last$V1
v2 = table_last$V2
newv2 = seq(min(v2),max(v2),by = 0.05)
conf_interval = predict(linear, newdata=data.frame(V5=newv2), interval="confidence",level = 0.95)
conf_interval = predict(linear, newdata=data.frame(V5=newv2), interval="confidence",level = 0.95)
table_last = read.table('CH03PR15.txt')
linear = lm(V1~V2, table_last)
summary(linear)
v1 = table_last$V1
v2 = table_last$V2
newv2 = seq(min(v2),max(v2),by = 0.05)
conf_interval = predict(linear, newdata=data.frame(V5=newv2), interval="confidence",level = 0.95)
newv2 = seq(min(v2),max(v2),by = 0.05)
conf_interval = predict(linear, newdata=data.frame(V2=newv2), interval="confidence",level = 0.95)
plot(v2, v1,pch=19,col='red', xlab="time", ylab="solution concentration", main="v1~v2")
abline(linear, col="lightblue")
matlines(newv2, conf_interval[,2:3], col = "blue", lty=10)
matlines(newv2, conf_interval[,2:3], col = "blue", lty=15)
matlines(newv2, conf_interval[,2:3], col = "blue", lty=25)
abline(linear, col="lightblue", lty=20)
abline(linear, col="lightblue", lty=20)
abline(linear, col="lightblue", pch=12)
abline(linear, col="lightblue")
matlines(newv2, conf_interval[,2:3], col = "blue", lty=25)
boxcox(table_last$V1~table_last$V2)
require(MASS)
require(MASS)
boxcox(table_last$V1~table_last$V2)
boxcox(table_last$V1~table_last$V2)
table_last = read.table('CH03PR15.txt')
linear = lm(log(V1)~V2, table_last)
summary(linear)
# zad 7 repeated for new model
summary(linear)
table_last = read.table('CH03PR15.txt')
linear = lm(V1~V2, table_last)
summary(linear)
table_last = read.table('CH03PR15.txt')
linear = lm(log(V1)~V2, table_last)
# zad 7 repeated for new model
summary(linear)
v1 = log(table_last$V1)
v2 = table_last$V2
newv2 = seq(min(v2),max(v2),by = 0.05)
conf_interval = predict(linear, newdata=data.frame(V2=newv2), interval="confidence",level = 0.95)
plot(v2, v1,pch=19,col='red', xlab="time", ylab="solution concentration", main="v1~v2")
abline(linear, col="lightblue")
matlines(newv2, conf_interval[,2:3], col = "blue", lty=25)
par(mfrow = c(2, 1))
par(mfrow = c(2, 1))
v1 = log(table_last$V1)
v2 = table_last$V2
newv2 = seq(min(v2),max(v2),by = 0.05)
conf_interval = predict(linear, newdata=data.frame(V2=newv2), interval="confidence",level = 0.95)
plot(v2, table_last$V1,pch=19,col='red', xlab="time", ylab="solution concentration", main="v1~v2")
par(mfrow = c(2, 1))
v1 = log(table_last$V1)
v2 = table_last$V2
newv2 = seq(min(v2),max(v2),by = 0.05)
conf_interval = predict(linear, newdata=data.frame(V2=newv2), interval="confidence",level = 0.95)
plot(v2, table_last$V1,pch=19,col='red', xlab="time", ylab="solution concentration", main="v1~v2")
par(mfrow = c(1,2))
v1 = log(table_last$V1)
v2 = table_last$V2
newv2 = seq(min(v2),max(v2),by = 0.05)
conf_interval = predict(linear, newdata=data.frame(V2=newv2), interval="confidence",level = 0.95)
plot(v2, table_last$V1,pch=19,col='red', xlab="time", ylab="solution concentration", main="v1~v2")
abline(linear, col="lightblue")
matlines(newv2, conf_interval[,2:3], col = "blue", lty=25)
v1 = table_last$V1
v2 = table_last$V2
newv2 = seq(min(v2),max(v2),by = 0.05)
conf_interval = predict(linear, newdata=data.frame(V2=newv2), interval="confidence",level = 0.95)
plot(v2, v1,pch=19,col='red', xlab="time", ylab="solution concentration", main="v1~v2")
abline(linear, col="lightblue")
matlines(newv2, conf_interval[,2:3], col = "blue", lty=25)
par(mfrow = c(1,2))
linear = lm(log(V1)~V2, table_last)
v1 = log(table_last$V1)
v2 = table_last$V2
newv2 = seq(min(v2),max(v2),by = 0.05)
conf_interval = predict(linear, newdata=data.frame(V2=newv2), interval="confidence",level = 0.95)
plot(v2, table_last$V1,pch=19,col='red', xlab="time", ylab="solution concentration", main="v1~v2")
abline(linear, col="lightblue")
matlines(newv2, conf_interval[,2:3], col = "blue", lty=25)
linear = lm(V1~V2, table_last)
v1 = table_last$V1
v2 = table_last$V2
newv2 = seq(min(v2),max(v2),by = 0.05)
conf_interval = predict(linear, newdata=data.frame(V2=newv2), interval="confidence",level = 0.95)
plot(v2, v1,pch=19,col='red', xlab="time", ylab="solution concentration", main="v1~v2")
abline(linear, col="lightblue")
matlines(newv2, conf_interval[,2:3], col = "blue", lty=25)
par(mfrow = c(1,2))
linear = lm(log(V1)~V2, table_last)
v1 = log(table_last$V1)
v2 = table_last$V2
newv2 = seq(min(v2),max(v2),by = 0.05)
conf_interval = predict(linear, newdata=data.frame(V2=newv2), interval="confidence",level = 0.95)
plot(v2, table_last$V1,pch=19,col='red', xlab="time", ylab="solution concentration", main="v1~v2 from ex 10")
abline(linear, col="lightblue")
matlines(newv2, conf_interval[,2:3], col = "blue", lty=25)
linear = lm(V1~V2, table_last)
v1 = table_last$V1
v2 = table_last$V2
newv2 = seq(min(v2),max(v2),by = 0.05)
conf_interval = predict(linear, newdata=data.frame(V2=newv2), interval="confidence",level = 0.95)
plot(v2, v1,pch=19,col='red', xlab="time", ylab="solution concentration", main="v1~v2 from ex 8")
abline(linear, col="lightblue")
matlines(newv2, conf_interval[,2:3], col = "blue", lty=25)
table_last = read.table('CH03PR15.txt')
linear = lm(log(V1)~V2, table_last)
# zad 7 repeated for new model
summary(linear)
# Becouse from zad10 we have that R_2 = 0.993
# then corelation coeff. is equal to
sqrt(R_2)
# Becouse from zad10 we have that R_2 = 0.993
R_2 = 0.993
# then corelation coeff. is equal to
sqrt(R_2)
par(mfrow = c(1,2))
linear = lm(log(V1)~V2, table_last)
v1 = log(table_last$V1)
v2 = table_last$V2
newv2 = seq(min(v2),max(v2),by = 0.05)
conf_interval = predict(linear, newdata=data.frame(V2=newv2), interval="confidence",level = 0.95)
plot(v2, v1,pch=19,col='red', xlab="time", ylab="solution concentration", main="v1~v2 from ex 10")
abline(linear, col="lightblue")
matlines(newv2, conf_interval[,2:3], col = "blue", lty=25)
linear = lm(V1~V2, table_last)
v1 = table_last$V1
v2 = table_last$V2
newv2 = seq(min(v2),max(v2),by = 0.05)
conf_interval = predict(linear, newdata=data.frame(V2=newv2), interval="confidence",level = 0.95)
plot(v2, v1,pch=19,col='red', xlab="time", ylab="solution concentration", main="v1~v2 from ex 8")
abline(linear, col="lightblue")
matlines(newv2, conf_interval[,2:3], col = "blue", lty=25)
par(mfrow = c(1,2))
linear = lm(log(V1)~V2, table_last)
v1 = log(table_last$V1)
v2 = table_last$V2
newv2 = seq(min(v2),max(v2),by = 0.05)
conf_interval = predict(linear, newdata=data.frame(V2=newv2), interval="confidence",level = 0.95)
plot(v2, v1,pch=19,col='red', xlab="time", ylab="solution concentration", main="log(v1)~v2")
abline(linear, col="lightblue")
matlines(newv2, conf_interval[,2:3], col = "blue", lty=25)
linear = lm(V1~V2, table_last)
v1 = table_last$V1
v2 = table_last$V2
newv2 = seq(min(v2),max(v2),by = 0.05)
conf_interval = predict(linear, newdata=data.frame(V2=newv2), interval="confidence",level = 0.95)
plot(v2, v1,pch=19,col='red', xlab="time", ylab="solution concentration", main="v1~v2")
abline(linear, col="lightblue")
matlines(newv2, conf_interval[,2:3], col = "blue", lty=25)
par(mfrow = c(1,3))
linear = lm(V1~V2^(-0.5), table_last)
v1 = table_last$V1
v2 = table_last$V2^(-0.5)
par(mfrow = c(1,3))
linear = lm(V1~V2^(-0.5), table_last)
par(mfrow = c(1,3))
linear = lm(V1~(V2)^(-0.5), table_last)
linear = lm(V1~V2^(-0.5), table_last)
linear = lm(V1~V2^(-0.5), table_last)
par(mfrow = c(1,3))
linear = lm(V1~I(V2^(-0.5)), table_last)
v1 = table_last$V1
v2 = table_last$V2^(-0.5)
newv2 = seq(min(v2),max(v2),by = 0.05)
conf_interval = predict(linear, newdata=data.frame(V2=newv2), interval="confidence",level = 0.95)
plot(v2, v1,pch=19,col='red', xlab="time", ylab="solution concentration", main="v1~v2^(-0.5)")
abline(linear, col="lightblue")
matlines(newv2, conf_interval[,2:3], col = "blue", lty=25)
linear = lm(log(V1)~V2, table_last)
v1 = log(table_last$V1)
v2 = table_last$V2
newv2 = seq(min(v2),max(v2),by = 0.05)
conf_interval = predict(linear, newdata=data.frame(V2=newv2), interval="confidence",level = 0.95)
plot(v2, v1,pch=19,col='red', xlab="time", ylab="solution concentration", main="log(v1)~v2")
abline(linear, col="lightblue")
matlines(newv2, conf_interval[,2:3], col = "blue", lty=25)
linear = lm(V1~V2, table_last)
v1 = table_last$V1
v2 = table_last$V2
newv2 = seq(min(v2),max(v2),by = 0.05)
conf_interval = predict(linear, newdata=data.frame(V2=newv2), interval="confidence",level = 0.95)
plot(v2, v1,pch=19,col='red', xlab="time", ylab="solution concentration", main="v1~v2")
abline(linear, col="lightblue")
matlines(newv2, conf_interval[,2:3], col = "blue", lty=25)
par(mfrow = c(1,3))
linear = lm(V1~I(V2^(-0.5)), table_last)
v1 = table_last$V1
v2 = I(table_last$V2)^(-0.5)
newv2 = seq(min(v2),max(v2),by = 0.05)
conf_interval = predict(linear, newdata=data.frame(V2=newv2), interval="confidence",level = 0.95)
plot(v2, v1,pch=19,col='red', xlab="time", ylab="solution concentration", main="v1~v2^(-0.5)")
abline(linear, col="lightblue")
matlines(newv2, conf_interval[,2:3], col = "blue", lty=25)
linear = lm(log(V1)~V2, table_last)
v1 = log(table_last$V1)
v2 = table_last$V2
newv2 = seq(min(v2),max(v2),by = 0.05)
conf_interval = predict(linear, newdata=data.frame(V2=newv2), interval="confidence",level = 0.95)
plot(v2, v1,pch=19,col='red', xlab="time", ylab="solution concentration", main="log(v1)~v2")
abline(linear, col="lightblue")
matlines(newv2, conf_interval[,2:3], col = "blue", lty=25)
linear = lm(V1~V2, table_last)
v1 = table_last$V1
v2 = table_last$V2
newv2 = seq(min(v2),max(v2),by = 0.05)
conf_interval = predict(linear, newdata=data.frame(V2=newv2), interval="confidence",level = 0.95)
plot(v2, v1,pch=19,col='red', xlab="time", ylab="solution concentration", main="v1~v2")
abline(linear, col="lightblue")
matlines(newv2, conf_interval[,2:3], col = "blue", lty=25)
par(mfrow = c(1,3))
linear = lm(V1~I(V2^(-0.5)), table_last)
v1 = table_last$V1
v2 = I(table_last$V2)^(-0.5)
newv2 = seq(min(v2),max(v2),by = 0.001)
conf_interval = predict(linear, newdata=data.frame(V2=newv2), interval="confidence",level = 0.95)
plot(v2, v1,pch=19,col='red', xlab="time", ylab="solution concentration", main="v1~v2^(-0.5)")
abline(linear, col="lightblue")
matlines(newv2, conf_interval[,2:3], col = "blue", lty=25)
summary(linear)
predict(linear)
predict(linear, interval = "confidence")
matlines(newv2, conf_interval[,2:3], col = "blue", lty=28)
plot(v2, v1,pch=19,col='red', xlab="time", ylab="solution concentration", main="v1~v2^(-0.5)")
abline(linear, col="lightblue")
matlines(newv2, conf_interval[,2:3], col = "blue", lty=28)
linear = lm(log(V1)~V2, table_last)
v1 = log(table_last$V1)
par(mfrow = c(1,3))
linear = lm(V1~I(V2^(-0.5)), table_last)
predict(linear, interval = "confidence")
v1 = table_last$V1
v2 = I(table_last$V2)^(-0.5)
newv2 = seq(min(v2),max(v2),by = 0.001)
conf_interval = predict(linear, newdata=data.frame(V2=newv2), interval="confidence",level = 0.95)
plot(v2, v1,pch=19,col='red', xlab="time", ylab="solution concentration", main="v1~v2^(-0.5)")
abline(linear, col="lightblue")
matlines(newv2, conf_interval[,2:3], col = "blue", lty=28)
v2 = I(table_last$V2)^(-0.5)
newv2 = seq(max(v2),min(v2),by = 0.001)
conf_interval = predict(linear, newdata=data.frame(V2=newv2), interval="confidence",level = 0.95)
v1 = table_last$V1
v2 = I(table_last$V2)^(-0.5)
newv2 = seq(max(v2),min(v2),by = 0.001)
v1 = table_last$V1
v2 = I(table_last$V2)^(-0.5)
newv2 = rev(seq(min(v2),max(v2),by = 0.001,))
conf_interval = predict(linear, newdata=data.frame(V2=newv2), interval="confidence",level = 0.95)
plot(v2, v1,pch=19,col='red', xlab="time", ylab="solution concentration", main="v1~v2^(-0.5)")
abline(linear, col="lightblue")
matlines(newv2, conf_interval[,2:3], col = "blue", lty=28)
linear = lm(log(V1)~V2, table_last)
v1 = log(table_last$V1)
par(mfrow = c(1,3))
linear = lm(V1~I(V2^(-0.5)), table_last)
predict(linear, interval = "confidence")
v1 = table_last$V1
v2 = I(table_last$V2)^(-0.5)
newv2 = rev(seq(min(v2),max(v2),by = 0.001,))
conf_interval = predict(linear, newdata=data.frame(V2=newv2), interval="confidence",level = 0.95)
plot(v2, v1,pch=19,col='red', xlab="time", ylab="solution concentration", main="v1~v2^(-0.5)")
abline(linear, col="lightblue")
matlines(newv2, conf_interval[,2:3], col = "blue", lty=28)
linear = lm(log(V1)~V2, table_last)
newv2 = seq(min(v2),max(v2),by = 0.001,)
conf_interval = predict(linear, newdata=data.frame(V2=newv2), interval="confidence",level = 0.95)
plot(v2, v1,pch=19,col='red', xlab="time", ylab="solution concentration", main="v1~v2^(-0.5)")
abline(linear, col="lightblue")
matlines(newv2, conf_interval[,2:3], col = "blue", lty=28)
linear = lm(log(V1)~V2, table_last)
v1 = log(table_last$V1)
v2 = table_last$V2
newv2 = seq(min(v2),max(v2),by = 0.05)
conf_interval = predict(linear, newdata=data.frame(V2=newv2), interval="confidence",level = 0.95)
plot(v2, v1,pch=19,col='red', xlab="time", ylab="solution concentration", main="log(v1)~v2")
abline(linear, col="lightblue")
matlines(newv2, conf_interval[,2:3], col = "blue", lty=25)
linear = lm(V1~V2, table_last)
v1 = table_last$V1
v2 = table_last$V2
newv2 = seq(min(v2),max(v2),by = 0.05)
conf_interval = predict(linear, newdata=data.frame(V2=newv2), interval="confidence",level = 0.95)
plot(v2, v1,pch=19,col='red', xlab="time", ylab="solution concentration", main="v1~v2")
abline(linear, col="lightblue")
matlines(newv2, conf_interval[,2:3], col = "blue", lty=25)
par(mfrow = c(1,3))
linear = lm(V1~I(V2^(-0.5)), table_last)
predict(linear, interval = "confidence")
v1 = table_last$V1
v2 = I(table_last$V2)^(-0.5)
newv2 = seq(min(v2),max(v2),by = 0.001,)
conf_interval = predict(linear, newdata=data.frame(V2=newv2), interval="confidence",level = 0.95)
plot(v2, v1,pch=19,col='red', xlab="time", ylab="solution concentration", main="v1~v2^(-0.5)")
abline(linear, col="lightblue")
matlines(newv2, conf_interval[,2:3], col = "blue", lty=28)
linear = lm(log(V1)~V2, table_last)
v1 = log(table_last$V1)
v2 = table_last$V2
newv2 = seq(min(v2),max(v2),by = 0.05)
conf_interval = predict(linear, newdata=data.frame(V2=newv2), interval="confidence",level = 0.95)
plot(v2, v1,pch=19,col='red', xlab="time", ylab="solution concentration", main="log(v1)~v2")
abline(linear, col="lightblue")
matlines(newv2, conf_interval[,2:3], col = "blue", lty=25)
linear = lm(V1~V2, table_last)
v1 = table_last$V1
v2 = table_last$V2
newv2 = seq(min(v2),max(v2),by = 0.05)
conf_interval = predict(linear, newdata=data.frame(V2=newv2), interval="confidence",level = 0.95)
plot(v2, v1,pch=19,col='red', xlab="time", ylab="solution concentration", main="v1~v2")
abline(linear, col="lightblue")
matlines(newv2, conf_interval[,2:3], col = "blue", lty=25)
summary(linear)
par(mfrow = c(1,3))
linear = lm(V1~I(V2^(-0.5)), table_last)
summary(linear)
